apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka-android'

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaAndroidTask) {
    delete "$rootDir/docs"

    outputFormat = 'html'
    outputDirectory = "$rootDir/docs"

    externalDocumentationLink {
        url = new URL("https://developer.android.com/reference/")
    }

    includeNonPublic = false

    // Always recreate documentation
    outputs.upToDateWhen { return false }
}

afterEvaluate {
    if (project.hasProperty("javadocJar")) {
        tasks.javadocJar.dependsOn dokkaJavadoc
    }
}


ext {

    package_name = 'com.joeiot'
    artifactVersion = '4.0.0_2024_10_23_2_SNAPSHOT'//release包发布的版本
    curFlavor = 'moorgen'

    artifactGroup = "spannedgridlayoutmanager"
    artifactFilePath = "${project.buildDir}/outputs/aar/${project.name}-" +
            "${(artifactVersion.endsWith('SNAPSHOT') || artifactVersion.endsWith('snapshot'))?'debug':'release'}.aar"

    bintrayRepo = 'maven'
    bintrayName = 'spannedgridlayoutmanager'

    publishedGroupId = 'com.joeiot'
    libraryName = 'SpannedGridLayoutManager'
    artifact = 'spannedgridlayoutmanager'
    artifactGroup

    libraryDescription = 'A layout manager that will resize and reorder views based on a provided SpanSize.'

    siteUrl = 'https://github.com/joegana/SpannedGridLayoutManager'
    gitUrl = 'https://github.com/joegana/SpannedGridLayoutManager.git'

    libraryVersion = '4.0.0'

    developerId = 'joegana'
    developerName = 'joegana'
    developerEmail = 'joegana@126.com'

    licenseName = 'MIT'
    licenseUrl = 'https://opensource.org/licenses/MIT'
    allLicenses = ["MIT"]
}

android {
    compileSdk 33
    namespace "com.joeiot.spannedgridlayoutmanager"
    defaultConfig {
        minSdkVersion 14
        targetSdk 33
        versionCode 1
        versionName libraryVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures{
        buildConfig true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

tasks.withType(Javadoc) {
    excludes = ['**/*.kt']
}

dependencies {
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

task generateSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    var src =  'sources'
    archiveClassifier.convention(src)
    archiveClassifier.set(src)
}


afterEvaluate {
    if(!artifactVersion.endsWith('SNAPSHOT') && !artifactVersion.endsWith('snapshot')){
        tasks.matching {
            (it.name.endsWith('artifactoryPublish') | it.name.startWith("publishAar"))
        }.each { tk ->
            tk.dependsOn('assembleRelease', 'generateSourcesJar')
        }
    }
}


// Bintray Upload
//apply from: '../gradle/tools/bintrayv1.gradle'
//apply from: '../gradle/tools/installv1.gradle'
apply from: '../local-maven.gradle'